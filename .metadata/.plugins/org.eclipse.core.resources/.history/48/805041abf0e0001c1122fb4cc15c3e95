package io.github.lunaribeiro.vendasapi.rest.vendas;

import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;

import io.github.lunaribeiro.vendasapi.model.Venda;
import io.github.lunaribeiro.vendasapi.model.repository.ItemVendaRepository;
import io.github.lunaribeiro.vendasapi.model.repository.VendaRepository;
import io.github.lunaribeiro.vendasapi.service.RelatorioVendasService;
import io.github.lunaribeiro.vendasapi.util.DateUtils;


@RestController
@RequestMapping("/api/vendas")
@CrossOrigin("*")
public class VendasController {
	
	@Autowired
	private VendaRepository repository;
	@Autowired
	private ItemVendaRepository itemVendaRepository;
	@Autowired
	private RelatorioVendasService relatorioVendasService;
	
	@PostMapping
	@Transactional
	public void realizarVenda(@RequestBody Venda venda) {
		repository.save(venda);
		venda.getItens().stream().forEach( iv -> iv.setVenda(venda));
		itemVendaRepository.saveAll(venda.getItens());
	}
	
	@GetMapping("/relatorio-vendas")
	public ResponseEntity<byte[]> relatorioVendas(
				@RequestParam(value = "id", required = false, defaultValue = "0") Long id,
				@RequestParam(value = "inicio", required = false, defaultValue = "") String inicio,
				@RequestParam(value = "", required = false, defaultValue = "") String fim
			){
		
		Date dataInicio = DateUtils.fromString(inicio, false);
		Date dataFim = DateUtils.fromString(fim, true);
		
		
		var relatorioGerado = relatorioVendasService.gerarRelatorio(id, dataInicio, dataFim);
		
		var headers = new HttpHeaders();
		var fileName = "relatorio.pdf";
												//inline; filename = "relatorio.pdf"
		headers.setContentDispositionFormData("inline; filename=\"" +fileName+ "\"", fileName);
		headers.setCacheControl("must-revalidate, post-check=0, pre-check=0");

		var responseEntity = new ResponseEntity<>(relatorioGerado, headers, HttpStatus.OK);
		return responseEntity;
	}
}
